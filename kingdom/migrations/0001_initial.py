# Generated by Django 5.0.1 on 2025-10-05 15:23

import django.core.validators
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Answer',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('answer', models.BooleanField(verbose_name='Ответ')),
                ('is_correct', models.BooleanField(verbose_name='Правильный ответ')),
                ('answered_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата ответа')),
            ],
            options={
                'verbose_name': 'Ответ',
                'verbose_name_plural': 'Ответы',
                'db_table': 'answers',
            },
        ),
        migrations.CreateModel(
            name='Citizen',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('age', models.PositiveIntegerField(verbose_name='Возраст')),
                ('pigeon_email', models.EmailField(max_length=254, verbose_name='Голубь (email)')),
                ('is_enrolled', models.BooleanField(default=False, verbose_name='Зачислен')),
                ('enrolled_at', models.DateTimeField(blank=True, null=True, verbose_name='Дата зачисления')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
            ],
            options={
                'verbose_name': 'Подданный',
                'verbose_name_plural': 'Подданные',
                'db_table': 'citizens',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='King',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('max_citizens', models.PositiveIntegerField(default=3, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(10)], verbose_name='Максимальное количество подданных')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
            ],
            options={
                'verbose_name': 'Король',
                'verbose_name_plural': 'Короли',
                'db_table': 'kings',
            },
        ),
        migrations.CreateModel(
            name='Kingdom',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200, unique=True, verbose_name='Наименование королевства')),
                ('description', models.TextField(blank=True, verbose_name='Описание')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
            ],
            options={
                'verbose_name': 'Королевство',
                'verbose_name_plural': 'Королевства',
                'db_table': 'kingdoms',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('text', models.TextField(verbose_name='Текст вопроса')),
                ('correct_answer', models.BooleanField(verbose_name='Правильный ответ')),
                ('order', models.PositiveIntegerField(default=0, verbose_name='Порядок')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
            ],
            options={
                'verbose_name': 'Вопрос',
                'verbose_name_plural': 'Вопросы',
                'db_table': 'questions',
                'ordering': ['order', 'created_at'],
            },
        ),
        migrations.CreateModel(
            name='Test',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=200, verbose_name='Название испытания')),
                ('description', models.TextField(blank=True, verbose_name='Описание')),
                ('is_active', models.BooleanField(default=True, verbose_name='Активно')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
            ],
            options={
                'verbose_name': 'Тестовое испытание',
                'verbose_name_plural': 'Тестовые испытания',
                'db_table': 'tests',
            },
        ),
        migrations.CreateModel(
            name='TestAttempt',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('status', models.CharField(choices=[('in_progress', 'В процессе'), ('completed', 'Завершен'), ('failed', 'Не пройден')], default='in_progress', max_length=20, verbose_name='Статус')),
                ('score', models.PositiveIntegerField(default=0, verbose_name='Баллы')),
                ('total_questions', models.PositiveIntegerField(default=0, verbose_name='Всего вопросов')),
                ('started_at', models.DateTimeField(auto_now_add=True, verbose_name='Начато')),
                ('completed_at', models.DateTimeField(blank=True, null=True, verbose_name='Завершено')),
            ],
            options={
                'verbose_name': 'Попытка прохождения теста',
                'verbose_name_plural': 'Попытки прохождения тестов',
                'db_table': 'test_attempts',
                'ordering': ['-started_at'],
            },
        ),
    ]
